 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      ResetISR    ; Reset     ; Int 08h (IRQ 0)
    15 | 00000024 | [A2080000]                |         dd      TickISR     ; Tick      ; Int 09h (IRQ 1)
    16 | 00000028 | [BE080000]                |         dd      KeyboardISR ; Keyboard  ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9B10F                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9ED0C                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | ; ISR responsible for saving state
  1113 |          |                           | ; ISR for Reset (Ctrl-R)
  1114 |          |                           | ResetISR:
  1115 | 00000886 | 50                        | 	push ax
  1116 | 00000887 | 53                        | 	push bx
  1117 | 00000888 | 51                        | 	push cx 
  1118 | 00000889 | 52                        | 	push dx
  1119 | 0000088A | 56                        | 	push si
  1120 | 0000088B | 57                        | 	push di
  1121 | 0000088C | 55                        | 	push bp
  1122 | 0000088D | 06                        | 	push es
  1123 | 0000088E | 1E                        | 	push ds 
  1124 | 0000088F | FB                        | 	sti
  1125 | 00000890 | E84B00                    | 	call handleReset
  1126 | 00000893 | FA                        | 	cli
  1127 | 00000894 | 1F                        | 	pop ds
  1128 | 00000895 | 07                        | 	pop es
  1129 | 00000896 | 5D                        | 	pop bp
  1130 | 00000897 | 5F                        | 	pop di
  1131 | 00000898 | 5E                        | 	pop si
  1132 | 00000899 | 5A                        | 	pop dx
  1133 | 0000089A | 59                        | 	pop cx
  1134 | 0000089B | 5B                        | 	pop bx
  1135 | 0000089C | B020                      | 	mov al, 0x20	; Load nonspecific EOI value into register al
  1136 | 0000089E | E620                      | 	out 0x20, al	; Write EOI to PIC (port 0x20)
  1137 | 000008A0 | 58                        | 	pop ax
  1138 | 000008A1 | CF                        | 	iret
  1139 |          |                           | 
  1140 |          |                           | ; ISR for Tick (Ctrl-T)
  1141 |          |                           | TickISR:
  1142 | 000008A2 | 50                        | 	push ax
  1143 | 000008A3 | 53                        | 	push bx
  1144 | 000008A4 | 51                        | 	push cx 
  1145 | 000008A5 | 52                        | 	push dx
  1146 | 000008A6 | 56                        | 	push si
  1147 | 000008A7 | 57                        | 	push di
  1148 | 000008A8 | 55                        | 	push bp
  1149 | 000008A9 | 06                        | 	push es
  1150 | 000008AA | 1E                        | 	push ds
  1151 |          |                           | 
  1152 | 000008AB | FB                        | 	sti 
  1153 | 000008AC | E84B00                    | 	call handleTick
  1154 | 000008AF | FA                        | 	cli
  1155 |          |                           | 
  1156 | 000008B0 | 1F                        | 	pop ds
  1157 | 000008B1 | 07                        | 	pop es
  1158 | 000008B2 | 5D                        | 	pop bp
  1159 | 000008B3 | 5F                        | 	pop di
  1160 | 000008B4 | 5E                        | 	pop si
  1161 | 000008B5 | 5A                        | 	pop dx
  1162 | 000008B6 | 59                        | 	pop cx
  1163 | 000008B7 | 5B                        | 	pop bx
  1164 | 000008B8 | B020                      | 	mov al, 0x20	; Load nonspecific EOI value into register al
  1165 | 000008BA | E620                      | 	out 0x20, al	; Write EOI to PIC (port 0x20)
  1166 | 000008BC | 58                        | 	pop ax
  1167 | 000008BD | CF                        | 	iret
  1168 |          |                           | 
  1169 |          |                           | ; ISR for Keyboard Interrupt (Any other key)
  1170 |          |                           | KeyboardISR:
  1171 | 000008BE | 50                        | 	push ax
  1172 | 000008BF | 53                        | 	push bx
  1173 | 000008C0 | 51                        | 	push cx 
  1174 | 000008C1 | 52                        | 	push dx
  1175 | 000008C2 | 56                        | 	push si
  1176 | 000008C3 | 57                        | 	push di
  1177 | 000008C4 | 55                        | 	push bp
  1178 | 000008C5 | 06                        | 	push es
  1179 | 000008C6 | 1E                        | 	push ds
  1180 | 000008C7 | FB                        | 	sti 
  1181 | 000008C8 | E88F00                    | 	call handleKeyboard
  1182 | 000008CB | FA                        | 	cli
  1183 |          |                           |  
  1184 | 000008CC | 1F                        | 	pop ds
  1185 | 000008CD | 07                        | 	pop es
  1186 | 000008CE | 5D                        | 	pop bp
  1187 | 000008CF | 5F                        | 	pop di
  1188 | 000008D0 | 5E                        | 	pop si
  1189 | 000008D1 | 5A                        | 	pop dx
  1190 | 000008D2 | 59                        | 	pop cx
  1191 | 000008D3 | 5B                        | 	pop bx
  1192 | 000008D4 | B020                      | 	mov al, 0x20	; Load nonspecific EOI value into register al
  1193 | 000008D6 | E620                      | 	out 0x20, al	; Write EOI to PIC (port 0x20)
  1194 | 000008D8 | 58                        | 	pop ax
  1195 | 000008D9 | CF                        | 	iret
  1196 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from cInt.i
  1197 |          |                           | 	CPU	8086
  1198 |          |                           | 	ALIGN	2
  1199 | 000008DA | E9D707                    | 	jmp	main	; Jump to program start
  1200 | 000008DD | 90                        | 	ALIGN	2
  1201 |          |                           | handleReset:
  1202 |          |                           | 	; >>>>> Line:	3
  1203 |          |                           | 	; >>>>> void handleReset(){ 
  1204 | 000008DE | EB0D                      | 	jmp	L_cInt_1
  1205 |          |                           | L_cInt_2:
  1206 |          |                           | 	; >>>>> Line:	4
  1207 |          |                           | 	; >>>>> exit(0); 
  1208 | 000008E0 | 30C0                      | 	xor	al, al
  1209 | 000008E2 | 50                        | 	push	ax
  1210 | 000008E3 | E8F4FA                    | 	call	exit
  1211 | 000008E6 | 83C402                    | 	add	sp, 2
  1212 | 000008E9 | 89EC                      | 	mov	sp, bp
  1213 | 000008EB | 5D                        | 	pop	bp
  1214 | 000008EC | C3                        | 	ret
  1215 |          |                           | L_cInt_1:
  1216 | 000008ED | 55                        | 	push	bp
  1217 | 000008EE | 89E5                      | 	mov	bp, sp
  1218 | 000008F0 | EBEE                      | 	jmp	L_cInt_2
  1219 |          |                           | 	ALIGN	2
  1220 |          |                           | n:
  1221 | 000008F2 | 0000                      | 	DW	0
  1222 |          |                           | L_cInt_4:
  1223 | 000008F4 | 5469636B2000              | 	DB	"Tick ",0
  1224 |          |                           | 	ALIGN	2
  1225 |          |                           | handleTick:
  1226 |          |                           | 	; >>>>> Line:	10
  1227 |          |                           | 	; >>>>> void handleTick(){ 
  1228 | 000008FA | EB22                      | 	jmp	L_cInt_5
  1229 |          |                           | L_cInt_6:
  1230 |          |                           | 	; >>>>> Line:	11
  1231 |          |                           | 	; >>>>> printNewLine(); 
  1232 | 000008FC | E817FB                    | 	call	printNewLine
  1233 |          |                           | 	; >>>>> Line:	12
  1234 |          |                           | 	; >>>>> printString("Tick "); 
  1235 | 000008FF | B8[F408]                  | 	mov	ax, L_cInt_4
  1236 | 00000902 | 50                        | 	push	ax
  1237 | 00000903 | E822FB                    | 	call	printString
  1238 | 00000906 | 83C402                    | 	add	sp, 2
  1239 |          |                           | 	; >>>>> Line:	13
  1240 |          |                           | 	; >>>>> printInt(n); 
  1241 | 00000909 | FF36[F208]                | 	push	word [n]
  1242 | 0000090D | E83CFB                    | 	call	printInt
  1243 | 00000910 | 83C402                    | 	add	sp, 2
  1244 |          |                           | 	; >>>>> Line:	14
  1245 |          |                           | 	; >>>>> printNewLine(); 
  1246 | 00000913 | E800FB                    | 	call	printNewLine
  1247 |          |                           | 	; >>>>> Line:	15
  1248 |          |                           | 	; >>>>> n++; 
  1249 | 00000916 | FF06[F208]                | 	inc	word [n]
  1250 | 0000091A | 89EC                      | 	mov	sp, bp
  1251 | 0000091C | 5D                        | 	pop	bp
  1252 | 0000091D | C3                        | 	ret
  1253 |          |                           | L_cInt_5:
  1254 | 0000091E | 55                        | 	push	bp
  1255 | 0000091F | 89E5                      | 	mov	bp, sp
  1256 | 00000921 | EBD9                      | 	jmp	L_cInt_6
  1257 |          |                           | L_cInt_11:
  1258 | 00000923 | 272049474E4F524544-       | 	DB	"' IGNORED",0
  1259 | 0000092C | 00                        | ...
  1260 |          |                           | L_cInt_10:
  1261 | 0000092D | 4B4559505245535320-       | 	DB	"KEYPRESS '",0
  1262 | 00000936 | 2700                      | ...
  1263 |          |                           | L_cInt_9:
  1264 | 00000938 | 44454C415920434F4D-       | 	DB	"DELAY COMPLETE",0
  1265 | 00000941 | 504C45544500              | ...
  1266 |          |                           | L_cInt_8:
  1267 | 00000947 | 44454C4159204B4559-       | 	DB	"DELAY KEY PRESSED",0
  1268 | 00000950 | 205052455353454400        | ...
  1269 | 00000959 | 90                        | 	ALIGN	2
  1270 |          |                           | handleKeyboard:
  1271 |          |                           | 	; >>>>> Line:	19
  1272 |          |                           | 	; >>>>> void handleKeyboard(){ 
  1273 | 0000095A | EB5C                      | 	jmp	L_cInt_12
  1274 |          |                           | L_cInt_13:
  1275 |          |                           | 	; >>>>> Line:	22
  1276 |          |                           | 	; >>>>> if(KeyBuffer == 'd'){ 
  1277 | 0000095C | 833E[C000]64              | 	cmp	word [KeyBuffer], 100
  1278 | 00000961 | 752D                      | 	jne	L_cInt_14
  1279 |          |                           | 	; >>>>> Line:	23
  1280 |          |                           | 	; >>>>> printNewLine(); 
  1281 | 00000963 | E8B0FA                    | 	call	printNewLine
  1282 |          |                           | 	; >>>>> Line:	24
  1283 |          |                           | 	; >>>>> printString("DELAY KEY PRESSED"); 
  1284 | 00000966 | B8[4709]                  | 	mov	ax, L_cInt_8
  1285 | 00000969 | 50                        | 	push	ax
  1286 | 0000096A | E8BBFA                    | 	call	printString
  1287 | 0000096D | 83C402                    | 	add	sp, 2
  1288 |          |                           | 	; >>>>> Line:	25
  1289 |          |                           | 	; >>>>> for (i = 0; i < 5000; i++){ 
  1290 | 00000970 | C746FE0000                | 	mov	word [bp-2], 0
  1291 | 00000975 | EB03                      | 	jmp	L_cInt_16
  1292 |          |                           | L_cInt_15:
  1293 |          |                           | L_cInt_18:
  1294 |          |                           | 	; >>>>> Line:	27
  1295 |          |                           | 	; >>>>> } 
  1296 | 00000977 | FF46FE                    | 	inc	word [bp-2]
  1297 |          |                           | L_cInt_16:
  1298 | 0000097A | 817EFE8813                | 	cmp	word [bp-2], 5000
  1299 | 0000097F | 7CF6                      | 	jl	L_cInt_15
  1300 |          |                           | L_cInt_17:
  1301 |          |                           | 	; >>>>> Line:	28
  1302 |          |                           | 	; >>>>> printNewLine(); 
  1303 | 00000981 | E892FA                    | 	call	printNewLine
  1304 |          |                           | 	; >>>>> Line:	29
  1305 |          |                           | 	; >>>>> printString("DELAY COMPLETE"); 
  1306 | 00000984 | B8[3809]                  | 	mov	ax, L_cInt_9
  1307 | 00000987 | 50                        | 	push	ax
  1308 | 00000988 | E89DFA                    | 	call	printString
  1309 | 0000098B | 83C402                    | 	add	sp, 2
  1310 | 0000098E | EB24                      | 	jmp	L_cInt_19
  1311 |          |                           | L_cInt_14:
  1312 |          |                           | 	; >>>>> Line:	32
  1313 |          |                           | 	; >>>>> printNewLine(); 
  1314 | 00000990 | E883FA                    | 	call	printNewLine
  1315 |          |                           | 	; >>>>> Line:	33
  1316 |          |                           | 	; >>>>> printString("KEYPRESS '"); 
  1317 | 00000993 | B8[2D09]                  | 	mov	ax, L_cInt_10
  1318 | 00000996 | 50                        | 	push	ax
  1319 | 00000997 | E88EFA                    | 	call	printString
  1320 | 0000099A | 83C402                    | 	add	sp, 2
  1321 |          |                           | 	; >>>>> Line:	34
  1322 |          |                           | 	; >>>>> printChar(KeyBuffer); 
  1323 | 0000099D | FF36[C000]                | 	push	word [KeyBuffer]
  1324 | 000009A1 | E860FA                    | 	call	printChar
  1325 | 000009A4 | 83C402                    | 	add	sp, 2
  1326 |          |                           | 	; >>>>> Line:	35
  1327 |          |                           | 	; >>>>> printString("' IGNORED"); 
  1328 | 000009A7 | B8[2309]                  | 	mov	ax, L_cInt_11
  1329 | 000009AA | 50                        | 	push	ax
  1330 | 000009AB | E87AFA                    | 	call	printString
  1331 | 000009AE | 83C402                    | 	add	sp, 2
  1332 |          |                           | 	; >>>>> Line:	36
  1333 |          |                           | 	; >>>>> printNewLine(); 
  1334 | 000009B1 | E862FA                    | 	call	printNewLine
  1335 |          |                           | L_cInt_19:
  1336 | 000009B4 | 89EC                      | 	mov	sp, bp
  1337 | 000009B6 | 5D                        | 	pop	bp
  1338 | 000009B7 | C3                        | 	ret
  1339 |          |                           | L_cInt_12:
  1340 | 000009B8 | 55                        | 	push	bp
  1341 | 000009B9 | 89E5                      | 	mov	bp, sp
  1342 | 000009BB | 51                        | 	push	cx
  1343 | 000009BC | EB9E                      | 	jmp	L_cInt_13
  1344 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1345 |          |                           | 	CPU	8086
  1346 |          |                           | 	ALIGN	2
  1347 | 000009BE | E9F306                    | 	jmp	main	; Jump to program start
  1348 | 000009C1 | 90                        | 	ALIGN	2
  1349 |          |                           | YKInitialize:
  1350 |          |                           | 	; >>>>> Line:	30
  1351 |          |                           | 	; >>>>> void YKInitialize() { 
  1352 | 000009C2 | E99D00                    | 	jmp	L_yakc_1
  1353 |          |                           | L_yakc_2:
  1354 |          |                           | 	; >>>>> Line:	33
  1355 |          |                           | 	; >>>>> activeTasks = 0; 
  1356 | 000009C5 | C706[3C0E]0000            | 	mov	word [activeTasks], 0
  1357 |          |                           | 	; >>>>> Line:	34
  1358 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1359 | 000009CB | C706[360E]0000            | 	mov	word [YKCtxSwCount], 0
  1360 |          |                           | 	; >>>>> Line:	35
  1361 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1362 | 000009D1 | C706[380E]0000            | 	mov	word [YKIdleCount], 0
  1363 |          |                           | 	; >>>>> Line:	36
  1364 |          |                           | 	; >>>>> YKTickNum = 0; 
  1365 | 000009D7 | C706[3A0E]0000            | 	mov	word [YKTickNum], 0
  1366 |          |                           | 	; >>>>> Line:	38
  1367 |          |                           | 	; >>>>> YKRdyList = 0; 
  1368 | 000009DD | C706[000E]0000            | 	mov	word [YKRdyList], 0
  1369 |          |                           | 	; >>>>> Line:	39
  1370 |          |                           | 	; >>>>> YKSuspList = 0; 
  1371 | 000009E3 | C706[020E]0000            | 	mov	word [YKSuspList], 0
  1372 |          |                           | 	; >>>>> Line:	40
  1373 |          |                           | 	; >>>>> YKAvailTCBList = YKTCBArray; 
  1374 | 000009E9 | C706[040E][060E]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1375 |          |                           | 	; >>>>> Line:	41
  1376 |          |                           | 	; >>>>> YKTCBArray[0].prev = 0; 
  1377 | 000009EF | C706[100E]0000            | 	mov	word [(10+YKTCBArray)], 0
  1378 |          |                           | 	; >>>>> Line:	42
  1379 |          |                           | 	; >>>>> for(i = 0; i < 3 + 1; i++){ 
  1380 | 000009F5 | C746FE0000                | 	mov	word [bp-2], 0
  1381 | 000009FA | EB4B                      | 	jmp	L_yakc_4
  1382 |          |                           | L_yakc_3:
  1383 |          |                           | 	; >>>>> Line:	43
  1384 |          |                           | 	; >>>>> YKTCBArray[i].next = &YKTCBArray[i + 1]; 
  1385 | 000009FC | 8B46FE                    | 	mov	ax, word [bp-2]
  1386 | 000009FF | 40                        | 	inc	ax
  1387 | 00000A00 | B90C00                    | 	mov	cx, 12
  1388 | 00000A03 | F7E9                      | 	imul	cx
  1389 | 00000A05 | 05[060E]                  | 	add	ax, YKTCBArray
  1390 | 00000A08 | 50                        | 	push	ax
  1391 | 00000A09 | 8B46FE                    | 	mov	ax, word [bp-2]
  1392 | 00000A0C | B90C00                    | 	mov	cx, 12
  1393 | 00000A0F | F7E9                      | 	imul	cx
  1394 | 00000A11 | 89C2                      | 	mov	dx, ax
  1395 | 00000A13 | 81C2[060E]                | 	add	dx, YKTCBArray
  1396 | 00000A17 | 89D6                      | 	mov	si, dx
  1397 | 00000A19 | 83C608                    | 	add	si, 8
  1398 | 00000A1C | 58                        | 	pop	ax
  1399 | 00000A1D | 8904                      | 	mov	word [si], ax
  1400 |          |                           | 	; >>>>> Line:	44
  1401 |          |                           | 	; >>>>> YKTCBArray[i + 1].prev = &YKTCBArray[i]; 
  1402 | 00000A1F | 8B46FE                    | 	mov	ax, word [bp-2]
  1403 | 00000A22 | B90C00                    | 	mov	cx, 12
  1404 | 00000A25 | F7E9                      | 	imul	cx
  1405 | 00000A27 | 05[060E]                  | 	add	ax, YKTCBArray
  1406 | 00000A2A | 8B56FE                    | 	mov	dx, word [bp-2]
  1407 | 00000A2D | 42                        | 	inc	dx
  1408 | 00000A2E | 50                        | 	push	ax
  1409 | 00000A2F | 89D0                      | 	mov	ax, dx
  1410 | 00000A31 | B90C00                    | 	mov	cx, 12
  1411 | 00000A34 | F7E9                      | 	imul	cx
  1412 | 00000A36 | 89C2                      | 	mov	dx, ax
  1413 | 00000A38 | 81C2[060E]                | 	add	dx, YKTCBArray
  1414 | 00000A3C | 89D6                      | 	mov	si, dx
  1415 | 00000A3E | 83C60A                    | 	add	si, 10
  1416 | 00000A41 | 58                        | 	pop	ax
  1417 | 00000A42 | 8904                      | 	mov	word [si], ax
  1418 |          |                           | L_yakc_6:
  1419 | 00000A44 | FF46FE                    | 	inc	word [bp-2]
  1420 |          |                           | L_yakc_4:
  1421 | 00000A47 | 837EFE04                  | 	cmp	word [bp-2], 4
  1422 | 00000A4B | 7CAF                      | 	jl	L_yakc_3
  1423 |          |                           | L_yakc_5:
  1424 |          |                           | 	; >>>>> Line:	47
  1425 |          |                           | 	; >>>>> YKNewTask(YKIdle, (void*)&IStk[255],255); 
  1426 | 00000A4D | B0FF                      | 	mov	al, 255
  1427 | 00000A4F | 50                        | 	push	ax
  1428 | 00000A50 | B8[3E10]                  | 	mov	ax, (IStk+510)
  1429 | 00000A53 | 50                        | 	push	ax
  1430 | 00000A54 | B8[180C]                  | 	mov	ax, YKIdle
  1431 | 00000A57 | 50                        | 	push	ax
  1432 | 00000A58 | E81100                    | 	call	YKNewTask
  1433 | 00000A5B | 83C406                    | 	add	sp, 6
  1434 | 00000A5E | 89EC                      | 	mov	sp, bp
  1435 | 00000A60 | 5D                        | 	pop	bp
  1436 | 00000A61 | C3                        | 	ret
  1437 |          |                           | L_yakc_1:
  1438 | 00000A62 | 55                        | 	push	bp
  1439 | 00000A63 | 89E5                      | 	mov	bp, sp
  1440 | 00000A65 | 83EC04                    | 	sub	sp, 4
  1441 | 00000A68 | E95AFF                    | 	jmp	L_yakc_2
  1442 | 00000A6B | 90                        | 	ALIGN	2
  1443 |          |                           | YKNewTask:
  1444 |          |                           | 	; >>>>> Line:	52
  1445 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), void*taskStack, unsigned char priority) { 
  1446 | 00000A6C | EB78                      | 	jmp	L_yakc_8
  1447 |          |                           | L_yakc_9:
  1448 |          |                           | 	; >>>>> Line:	58
  1449 |          |                           | 	; >>>>> activeTasks++; 
  1450 | 00000A6E | A1[3C0E]                  | 	mov	ax, word [activeTasks]
  1451 | 00000A71 | B90C00                    | 	mov	cx, 12
  1452 | 00000A74 | F7E9                      | 	imul	cx
  1453 | 00000A76 | 05[060E]                  | 	add	ax, YKTCBArray
  1454 | 00000A79 | 8946FA                    | 	mov	word [bp-6], ax
  1455 |          |                           | 	; >>>>> Line:	58
  1456 |          |                           | 	; >>>>> activeTasks++; 
  1457 | 00000A7C | FF06[3C0E]                | 	inc	word [activeTasks]
  1458 |          |                           | 	; >>>>> Line:	59
  1459 |          |                           | 	; >>>>> new_task->priority = priority; 
  1460 | 00000A80 | 8B76FA                    | 	mov	si, word [bp-6]
  1461 | 00000A83 | 83C604                    | 	add	si, 4
  1462 | 00000A86 | 8A4608                    | 	mov	al, byte [bp+8]
  1463 | 00000A89 | 8804                      | 	mov	byte [si], al
  1464 |          |                           | 	; >>>>> Line:	60
  1465 |          |                           | 	; >>>>> new_task->state = 0; 
  1466 | 00000A8B | 8B76FA                    | 	mov	si, word [bp-6]
  1467 | 00000A8E | 83C602                    | 	add	si, 2
  1468 | 00000A91 | C7040000                  | 	mov	word [si], 0
  1469 |          |                           | 	; >>>>> Line:	61
  1470 |          |                           | 	; >>>>> new_task->delay = 0; 
  1471 | 00000A95 | 8B76FA                    | 	mov	si, word [bp-6]
  1472 | 00000A98 | 83C606                    | 	add	si, 6
  1473 | 00000A9B | C7040000                  | 	mov	word [si], 0
  1474 |          |                           | 	; >>>>> Line:	62
  1475 |          |                           | 	; >>>>> YKRdyList = queue(YKRdyList,new_task); 
  1476 | 00000A9F | FF76FA                    | 	push	word [bp-6]
  1477 | 00000AA2 | FF36[000E]                | 	push	word [YKRdyList]
  1478 | 00000AA6 | E88D01                    | 	call	queue
  1479 | 00000AA9 | 83C404                    | 	add	sp, 4
  1480 | 00000AAC | A3[000E]                  | 	mov	word [YKRdyList], ax
  1481 |          |                           | 	; >>>>> Line:	63
  1482 |          |                           | 	; >>>>> ip = (int) task & 0xFFFF; 
  1483 | 00000AAF | 8B4604                    | 	mov	ax, word [bp+4]
  1484 | 00000AB2 | 25FFFF                    | 	and	ax, 65535
  1485 | 00000AB5 | 8946FE                    | 	mov	word [bp-2], ax
  1486 |          |                           | 	; >>>>> Line:	64
  1487 |          |                           | 	; >>>>> sp = (int) taskStack & 0xFFFF; 
  1488 | 00000AB8 | 8B4606                    | 	mov	ax, word [bp+6]
  1489 | 00000ABB | 25FFFF                    | 	and	ax, 65535
  1490 | 00000ABE | 8946FC                    | 	mov	word [bp-4], ax
  1491 |          |                           | 	; >>>>> Line:	65
  1492 |          |                           | 	; >>>>> sp = initStack(ip,sp); 
  1493 | 00000AC1 | FF76FC                    | 	push	word [bp-4]
  1494 | 00000AC4 | FF76FE                    | 	push	word [bp-2]
  1495 | 00000AC7 | E87405                    | 	call	initStack
  1496 | 00000ACA | 83C404                    | 	add	sp, 4
  1497 | 00000ACD | 8946FC                    | 	mov	word [bp-4], ax
  1498 |          |                           | 	; >>>>> Line:	66
  1499 |          |                           | 	; >>>>> new_task->sp = (void*)sp; 
  1500 | 00000AD0 | 8B76FA                    | 	mov	si, word [bp-6]
  1501 | 00000AD3 | 8B46FC                    | 	mov	ax, word [bp-4]
  1502 | 00000AD6 | 8904                      | 	mov	word [si], ax
  1503 |          |                           | 	; >>>>> Line:	74
  1504 |          |                           | 	; >>>>> if(runningTask != 0){ 
  1505 | 00000AD8 | A1[3E0E]                  | 	mov	ax, word [runningTask]
  1506 | 00000ADB | 85C0                      | 	test	ax, ax
  1507 | 00000ADD | 7403                      | 	je	L_yakc_10
  1508 |          |                           | 	; >>>>> Line:	75
  1509 |          |                           | 	; >>>>> YKScheduler(); 
  1510 | 00000ADF | E85400                    | 	call	YKScheduler
  1511 |          |                           | L_yakc_10:
  1512 | 00000AE2 | 89EC                      | 	mov	sp, bp
  1513 | 00000AE4 | 5D                        | 	pop	bp
  1514 | 00000AE5 | C3                        | 	ret
  1515 |          |                           | L_yakc_8:
  1516 | 00000AE6 | 55                        | 	push	bp
  1517 | 00000AE7 | 89E5                      | 	mov	bp, sp
  1518 | 00000AE9 | 83EC06                    | 	sub	sp, 6
  1519 | 00000AEC | EB80                      | 	jmp	L_yakc_9
  1520 |          |                           | 	ALIGN	2
  1521 |          |                           | YKRun:
  1522 |          |                           | 	; >>>>> Line:	83
  1523 |          |                           | 	; >>>>> void YKRun() { 
  1524 | 00000AEE | EB07                      | 	jmp	L_yakc_12
  1525 |          |                           | L_yakc_13:
  1526 |          |                           | 	; >>>>> Line:	85
  1527 |          |                           | 	; >>>>> YKScheduler(); 
  1528 | 00000AF0 | E84300                    | 	call	YKScheduler
  1529 | 00000AF3 | 89EC                      | 	mov	sp, bp
  1530 | 00000AF5 | 5D                        | 	pop	bp
  1531 | 00000AF6 | C3                        | 	ret
  1532 |          |                           | L_yakc_12:
  1533 | 00000AF7 | 55                        | 	push	bp
  1534 | 00000AF8 | 89E5                      | 	mov	bp, sp
  1535 | 00000AFA | EBF4                      | 	jmp	L_yakc_13
  1536 |          |                           | 	ALIGN	2
  1537 |          |                           | YKDelayTask:
  1538 |          |                           | 	; >>>>> Line:	88
  1539 |          |                           | 	; >>>>> void YKDelayTask(int count) { 
  1540 | 00000AFC | EB1A                      | 	jmp	L_yakc_15
  1541 |          |                           | L_yakc_16:
  1542 |          |                           | 	; >>>>> Line:	90
  1543 |          |                           | 	; >>>>> runningTask->delay=count; 
  1544 | 00000AFE | 8B36[3E0E]                | 	mov	si, word [runningTask]
  1545 | 00000B02 | 83C606                    | 	add	si, 6
  1546 | 00000B05 | 8B4604                    | 	mov	ax, word [bp+4]
  1547 | 00000B08 | 8904                      | 	mov	word [si], ax
  1548 |          |                           | 	; >>>>> Line:	91
  1549 |          |                           | 	; >>>>> suspendTask(runningTask); 
  1550 | 00000B0A | FF36[3E0E]                | 	push	word [runningTask]
  1551 | 00000B0E | E8F301                    | 	call	suspendTask
  1552 | 00000B11 | 83C402                    | 	add	sp, 2
  1553 | 00000B14 | 89EC                      | 	mov	sp, bp
  1554 | 00000B16 | 5D                        | 	pop	bp
  1555 | 00000B17 | C3                        | 	ret
  1556 |          |                           | L_yakc_15:
  1557 | 00000B18 | 55                        | 	push	bp
  1558 | 00000B19 | 89E5                      | 	mov	bp, sp
  1559 | 00000B1B | EBE1                      | 	jmp	L_yakc_16
  1560 | 00000B1D | 90                        | 	ALIGN	2
  1561 |          |                           | YKEnterISR:
  1562 |          |                           | 	; >>>>> Line:	107
  1563 |          |                           | 	; >>>>> void YKEnterISR() { 
  1564 | 00000B1E | EB04                      | 	jmp	L_yakc_18
  1565 |          |                           | L_yakc_19:
  1566 |          |                           | 	; >>>>> Line:	109
  1567 |          |                           | 	; >>>>> } 
  1568 | 00000B20 | 89EC                      | 	mov	sp, bp
  1569 | 00000B22 | 5D                        | 	pop	bp
  1570 | 00000B23 | C3                        | 	ret
  1571 |          |                           | L_yakc_18:
  1572 | 00000B24 | 55                        | 	push	bp
  1573 | 00000B25 | 89E5                      | 	mov	bp, sp
  1574 | 00000B27 | EBF7                      | 	jmp	L_yakc_19
  1575 | 00000B29 | 90                        | 	ALIGN	2
  1576 |          |                           | YKExitISR:
  1577 |          |                           | 	; >>>>> Line:	111
  1578 |          |                           | 	; >>>>> void YKExitISR() { 
  1579 | 00000B2A | EB04                      | 	jmp	L_yakc_21
  1580 |          |                           | L_yakc_22:
  1581 |          |                           | 	; >>>>> Line:	113
  1582 |          |                           | 	; >>>>> } 
  1583 | 00000B2C | 89EC                      | 	mov	sp, bp
  1584 | 00000B2E | 5D                        | 	pop	bp
  1585 | 00000B2F | C3                        | 	ret
  1586 |          |                           | L_yakc_21:
  1587 | 00000B30 | 55                        | 	push	bp
  1588 | 00000B31 | 89E5                      | 	mov	bp, sp
  1589 | 00000B33 | EBF7                      | 	jmp	L_yakc_22
  1590 | 00000B35 | 90                        | 	ALIGN	2
  1591 |          |                           | YKScheduler:
  1592 |          |                           | 	; >>>>> Line:	116
  1593 |          |                           | 	; >>>>> f(YKSuspL 
  1594 | 00000B36 | EB5B                      | 	jmp	L_yakc_24
  1595 |          |                           | L_yakc_25:
  1596 |          |                           | 	; >>>>> Line:	122
  1597 |          |                           | 	; >>>>> next = dequeue(YKRdyList); 
  1598 | 00000B38 | FF36[000E]                | 	push	word [YKRdyList]
  1599 | 00000B3C | E8A501                    | 	call	dequeue
  1600 | 00000B3F | 83C402                    | 	add	sp, 2
  1601 | 00000B42 | 8946FE                    | 	mov	word [bp-2], ax
  1602 |          |                           | 	; >>>>> Line:	141
  1603 |          |                           | 	; >>>>> if((runningTask != 0) && (next->priority > runningTask->priority)){ 
  1604 | 00000B45 | A1[3E0E]                  | 	mov	ax, word [runningTask]
  1605 | 00000B48 | 85C0                      | 	test	ax, ax
  1606 | 00000B4A | 7425                      | 	je	L_yakc_26
  1607 | 00000B4C | 8B76FE                    | 	mov	si, word [bp-2]
  1608 | 00000B4F | 83C604                    | 	add	si, 4
  1609 | 00000B52 | 8B3E[3E0E]                | 	mov	di, word [runningTask]
  1610 | 00000B56 | 83C704                    | 	add	di, 4
  1611 | 00000B59 | 8A05                      | 	mov	al, byte [di]
  1612 | 00000B5B | 3A04                      | 	cmp	al, byte [si]
  1613 | 00000B5D | 7312                      | 	jae	L_yakc_26
  1614 |          |                           | 	; >>>>> Line:	143
  1615 |          |                           | 	; >>>>> YKRdyList = queue(YKRdyList,next); 
  1616 | 00000B5F | FF76FE                    | 	push	word [bp-2]
  1617 | 00000B62 | FF36[000E]                | 	push	word [YKRdyList]
  1618 | 00000B66 | E8CD00                    | 	call	queue
  1619 | 00000B69 | 83C404                    | 	add	sp, 4
  1620 | 00000B6C | A3[000E]                  | 	mov	word [YKRdyList], ax
  1621 | 00000B6F | EB1E                      | 	jmp	L_yakc_27
  1622 |          |                           | L_yakc_26:
  1623 |          |                           | 	; >>>>> Line:	146
  1624 |          |                           | 	; >>>>> YKCtxSwCount++; 
  1625 | 00000B71 | FF06[360E]                | 	inc	word [YKCtxSwCount]
  1626 |          |                           | 	; >>>>> Line:	147
  1627 |          |                           | 	; >>>>> YKRdyList = queue(YKRdyList,runningTask); 
  1628 | 00000B75 | FF36[3E0E]                | 	push	word [runningTask]
  1629 | 00000B79 | FF36[000E]                | 	push	word [YKRdyList]
  1630 | 00000B7D | E8B600                    | 	call	queue
  1631 | 00000B80 | 83C404                    | 	add	sp, 4
  1632 | 00000B83 | A3[000E]                  | 	mov	word [YKRdyList], ax
  1633 |          |                           | 	; >>>>> Line:	148
  1634 |          |                           | 	; >>>>> YKDispatcher(next); 
  1635 | 00000B86 | FF76FE                    | 	push	word [bp-2]
  1636 | 00000B89 | E80E00                    | 	call	YKDispatcher
  1637 | 00000B8C | 83C402                    | 	add	sp, 2
  1638 |          |                           | L_yakc_27:
  1639 | 00000B8F | 89EC                      | 	mov	sp, bp
  1640 | 00000B91 | 5D                        | 	pop	bp
  1641 | 00000B92 | C3                        | 	ret
  1642 |          |                           | L_yakc_24:
  1643 | 00000B93 | 55                        | 	push	bp
  1644 | 00000B94 | 89E5                      | 	mov	bp, sp
  1645 | 00000B96 | 51                        | 	push	cx
  1646 | 00000B97 | EB9F                      | 	jmp	L_yakc_25
  1647 | 00000B99 | 90                        | 	ALIGN	2
  1648 |          |                           | YKDispatcher:
  1649 |          |                           | 	; >>>>> Line:	153
  1650 |          |                           | 	; >>>>> void YKDispatcher(TCBptr next) { 
  1651 | 00000B9A | EB2B                      | 	jmp	L_yakc_29
  1652 |          |                           | L_yakc_30:
  1653 |          |                           | 	; >>>>> Line:	156
  1654 |          |                           | 	; >>>>> runningTask = next; 
  1655 | 00000B9C | 8B4604                    | 	mov	ax, word [bp+4]
  1656 | 00000B9F | A3[3E0E]                  | 	mov	word [runningTask], ax
  1657 |          |                           | 	; >>>>> Line:	157
  1658 |          |                           | 	; >>>>> sp = next->sp; 
  1659 | 00000BA2 | 8B7604                    | 	mov	si, word [bp+4]
  1660 | 00000BA5 | 8B04                      | 	mov	ax, word [si]
  1661 | 00000BA7 | 8946FE                    | 	mov	word [bp-2], ax
  1662 |          |                           | 	; >>>>> Line:	158
  1663 |          |                           | 	; >>>>> next->state = 1; 
  1664 | 00000BAA | 8B7604                    | 	mov	si, word [bp+4]
  1665 | 00000BAD | 83C602                    | 	add	si, 2
  1666 | 00000BB0 | C7040100                  | 	mov	word [si], 1
  1667 |          |                           | 	; >>>>> Line:	159
  1668 |          |                           | 	; >>>>> YKEnterMutex(); 
  1669 | 00000BB4 | E8C204                    | 	call	YKEnterMutex
  1670 |          |                           | 	; >>>>> Line:	160
  1671 |          |                           | 	; >>>>> dispatchTask(sp); 
  1672 | 00000BB7 | FF76FE                    | 	push	word [bp-2]
  1673 | 00000BBA | E8AC04                    | 	call	dispatchTask
  1674 | 00000BBD | 83C402                    | 	add	sp, 2
  1675 |          |                           | 	; >>>>> Line:	161
  1676 |          |                           | 	; >>>>> YKExitMutex(); 
  1677 | 00000BC0 | E8BE04                    | 	call	YKExitMutex
  1678 | 00000BC3 | 89EC                      | 	mov	sp, bp
  1679 | 00000BC5 | 5D                        | 	pop	bp
  1680 | 00000BC6 | C3                        | 	ret
  1681 |          |                           | L_yakc_29:
  1682 | 00000BC7 | 55                        | 	push	bp
  1683 | 00000BC8 | 89E5                      | 	mov	bp, sp
  1684 | 00000BCA | 51                        | 	push	cx
  1685 | 00000BCB | EBCF                      | 	jmp	L_yakc_30
  1686 | 00000BCD | 90                        | 	ALIGN	2
  1687 |          |                           | YKTickHandler:
  1688 |          |                           | 	; >>>>> Line:	164
  1689 |          |                           | 	; >>>>> void YKTickHandler() { 
  1690 | 00000BCE | EB41                      | 	jmp	L_yakc_32
  1691 |          |                           | L_yakc_33:
  1692 |          |                           | 	; >>>>> Line:	166
  1693 |          |                           | 	; >>>>> YKSuspList->delay = YKSuspList->delay - 1; 
  1694 | 00000BD0 | 8B36[020E]                | 	mov	si, word [YKSuspList]
  1695 | 00000BD4 | 83C606                    | 	add	si, 6
  1696 | 00000BD7 | 8B04                      | 	mov	ax, word [si]
  1697 | 00000BD9 | 48                        | 	dec	ax
  1698 | 00000BDA | 8B36[020E]                | 	mov	si, word [YKSuspList]
  1699 | 00000BDE | 83C606                    | 	add	si, 6
  1700 | 00000BE1 | 8904                      | 	mov	word [si], ax
  1701 |          |                           | 	; >>>>> Line:	167
  1702 |          |                           | 	; >>>>> if(YKSuspL 
  1703 | 00000BE3 | 8B36[020E]                | 	mov	si, word [YKSuspList]
  1704 | 00000BE7 | 83C606                    | 	add	si, 6
  1705 | 00000BEA | 8B04                      | 	mov	ax, word [si]
  1706 | 00000BEC | 85C0                      | 	test	ax, ax
  1707 | 00000BEE | 751D                      | 	jne	L_yakc_34
  1708 |          |                           | 	; >>>>> Line:	169
  1709 |          |                           | 	; >>>>> YKRdyList = queue(YKRdyList,task); 
  1710 | 00000BF0 | FF36[020E]                | 	push	word [YKSuspList]
  1711 | 00000BF4 | E8ED00                    | 	call	dequeue
  1712 | 00000BF7 | 83C402                    | 	add	sp, 2
  1713 | 00000BFA | 8946FE                    | 	mov	word [bp-2], ax
  1714 |          |                           | 	; >>>>> Line:	169
  1715 |          |                           | 	; >>>>> YKRdyList = queue(YKRdyList,task); 
  1716 | 00000BFD | FF76FE                    | 	push	word [bp-2]
  1717 | 00000C00 | FF36[000E]                | 	push	word [YKRdyList]
  1718 | 00000C04 | E82F00                    | 	call	queue
  1719 | 00000C07 | 83C404                    | 	add	sp, 4
  1720 | 00000C0A | A3[000E]                  | 	mov	word [YKRdyList], ax
  1721 |          |                           | L_yakc_34:
  1722 | 00000C0D | 89EC                      | 	mov	sp, bp
  1723 | 00000C0F | 5D                        | 	pop	bp
  1724 | 00000C10 | C3                        | 	ret
  1725 |          |                           | L_yakc_32:
  1726 | 00000C11 | 55                        | 	push	bp
  1727 | 00000C12 | 89E5                      | 	mov	bp, sp
  1728 | 00000C14 | 51                        | 	push	cx
  1729 | 00000C15 | EBB9                      | 	jmp	L_yakc_33
  1730 | 00000C17 | 90                        | 	ALIGN	2
  1731 |          |                           | YKIdle:
  1732 |          |                           | 	; >>>>> Line:	173
  1733 |          |                           | 	; >>>>> void YKIdle() { 
  1734 | 00000C18 | EB16                      | 	jmp	L_yakc_36
  1735 |          |                           | L_yakc_37:
  1736 |          |                           | 	; >>>>> Line:	175
  1737 |          |                           | 	; >>>>> while(1) { 
  1738 | 00000C1A | EB0E                      | 	jmp	L_yakc_39
  1739 |          |                           | L_yakc_38:
  1740 |          |                           | 	; >>>>> Line:	176
  1741 |          |                           | 	; >>>>> YKIdleCount++; 
  1742 | 00000C1C | FF06[380E]                | 	inc	word [YKIdleCount]
  1743 |          |                           | 	; >>>>> Line:	177
  1744 |          |                           | 	; >>>>> i = 0; 
  1745 | 00000C20 | C746FE0000                | 	mov	word [bp-2], 0
  1746 |          |                           | 	; >>>>> Line:	178
  1747 |          |                           | 	; >>>>> i = 0; 
  1748 | 00000C25 | C746FE0000                | 	mov	word [bp-2], 0
  1749 |          |                           | L_yakc_39:
  1750 | 00000C2A | EBF0                      | 	jmp	L_yakc_38
  1751 |          |                           | L_yakc_40:
  1752 | 00000C2C | 89EC                      | 	mov	sp, bp
  1753 | 00000C2E | 5D                        | 	pop	bp
  1754 | 00000C2F | C3                        | 	ret
  1755 |          |                           | L_yakc_36:
  1756 | 00000C30 | 55                        | 	push	bp
  1757 | 00000C31 | 89E5                      | 	mov	bp, sp
  1758 | 00000C33 | 51                        | 	push	cx
  1759 | 00000C34 | EBE4                      | 	jmp	L_yakc_37
  1760 |          |                           | 	ALIGN	2
  1761 |          |                           | queue:
  1762 |          |                           | 	; >>>>> Line:	185
  1763 |          |                           | 	; >>>>> TCBptr queue(TCBptr queue_head, TCBptr task){ 
  1764 | 00000C36 | E9A400                    | 	jmp	L_yakc_42
  1765 |          |                           | L_yakc_43:
  1766 |          |                           | 	; >>>>> Line:	186
  1767 |          |                           | 	; >>>>> if(queue_head == 0){ 
  1768 | 00000C39 | 8B4604                    | 	mov	ax, word [bp+4]
  1769 | 00000C3C | 85C0                      | 	test	ax, ax
  1770 | 00000C3E | 7506                      | 	jne	L_yakc_44
  1771 |          |                           | 	; >>>>> Line:	187
  1772 |          |                           | 	; >>>>> return task; 
  1773 | 00000C40 | 8B4606                    | 	mov	ax, word [bp+6]
  1774 | 00000C43 | E99300                    | 	jmp	L_yakc_45
  1775 |          |                           | L_yakc_44:
  1776 |          |                           | 	; >>>>> Line:	189
  1777 |          |                           | 	; >>>>> if(queue_head->priority > task->priority){ 
  1778 | 00000C46 | 8B7604                    | 	mov	si, word [bp+4]
  1779 | 00000C49 | 83C604                    | 	add	si, 4
  1780 | 00000C4C | 8B7E06                    | 	mov	di, word [bp+6]
  1781 | 00000C4F | 83C704                    | 	add	di, 4
  1782 | 00000C52 | 8A05                      | 	mov	al, byte [di]
  1783 | 00000C54 | 3A04                      | 	cmp	al, byte [si]
  1784 | 00000C56 | 731E                      | 	jae	L_yakc_46
  1785 |          |                           | 	; >>>>> Line:	190
  1786 |          |                           | 	; >>>>> task->next = queue_head; 
  1787 | 00000C58 | 8B7606                    | 	mov	si, word [bp+6]
  1788 | 00000C5B | 83C608                    | 	add	si, 8
  1789 | 00000C5E | 8B4604                    | 	mov	ax, word [bp+4]
  1790 | 00000C61 | 8904                      | 	mov	word [si], ax
  1791 |          |                           | 	; >>>>> Line:	191
  1792 |          |                           | 	; >>>>> queue_head->prev = task; 
  1793 | 00000C63 | 8B7604                    | 	mov	si, word [bp+4]
  1794 | 00000C66 | 83C60A                    | 	add	si, 10
  1795 | 00000C69 | 8B4606                    | 	mov	ax, word [bp+6]
  1796 | 00000C6C | 8904                      | 	mov	word [si], ax
  1797 |          |                           | 	; >>>>> Line:	192
  1798 |          |                           | 	; >>>>> queue_head = task; 
  1799 | 00000C6E | 8B4606                    | 	mov	ax, word [bp+6]
  1800 | 00000C71 | 894604                    | 	mov	word [bp+4], ax
  1801 | 00000C74 | EB60                      | 	jmp	L_yakc_47
  1802 |          |                           | L_yakc_46:
  1803 |          |                           | 	; >>>>> Line:	195
  1804 |          |                           | 	; >>>>> while(temp->next->priority < task->priority) { 
  1805 | 00000C76 | 8B4604                    | 	mov	ax, word [bp+4]
  1806 | 00000C79 | 8946FE                    | 	mov	word [bp-2], ax
  1807 |          |                           | 	; >>>>> Line:	195
  1808 |          |                           | 	; >>>>> while(temp->next->priority < task->priority) { 
  1809 | 00000C7C | EB0B                      | 	jmp	L_yakc_49
  1810 |          |                           | L_yakc_48:
  1811 |          |                           | 	; >>>>> Line:	196
  1812 |          |                           | 	; >>>>> temp = temp->next; 
  1813 | 00000C7E | 8B76FE                    | 	mov	si, word [bp-2]
  1814 | 00000C81 | 83C608                    | 	add	si, 8
  1815 | 00000C84 | 8B04                      | 	mov	ax, word [si]
  1816 | 00000C86 | 8946FE                    | 	mov	word [bp-2], ax
  1817 |          |                           | L_yakc_49:
  1818 | 00000C89 | 8B76FE                    | 	mov	si, word [bp-2]
  1819 | 00000C8C | 83C608                    | 	add	si, 8
  1820 | 00000C8F | 8B34                      | 	mov	si, word [si]
  1821 | 00000C91 | 83C604                    | 	add	si, 4
  1822 | 00000C94 | 8B7E06                    | 	mov	di, word [bp+6]
  1823 | 00000C97 | 83C704                    | 	add	di, 4
  1824 | 00000C9A | 8A05                      | 	mov	al, byte [di]
  1825 | 00000C9C | 3A04                      | 	cmp	al, byte [si]
  1826 | 00000C9E | 77DE                      | 	ja	L_yakc_48
  1827 |          |                           | L_yakc_50:
  1828 |          |                           | 	; >>>>> Line:	198
  1829 |          |                           | 	; >>>>> task->next = t 
  1830 | 00000CA0 | 8B76FE                    | 	mov	si, word [bp-2]
  1831 | 00000CA3 | 83C608                    | 	add	si, 8
  1832 | 00000CA6 | 8B7E06                    | 	mov	di, word [bp+6]
  1833 | 00000CA9 | 83C708                    | 	add	di, 8
  1834 | 00000CAC | 8B04                      | 	mov	ax, word [si]
  1835 | 00000CAE | 8905                      | 	mov	word [di], ax
  1836 |          |                           | 	; >>>>> Line:	199
  1837 |          |                           | 	; >>>>> task->next->prev = task; 
  1838 | 00000CB0 | 8B7606                    | 	mov	si, word [bp+6]
  1839 | 00000CB3 | 83C608                    | 	add	si, 8
  1840 | 00000CB6 | 8B34                      | 	mov	si, word [si]
  1841 | 00000CB8 | 83C60A                    | 	add	si, 10
  1842 | 00000CBB | 8B4606                    | 	mov	ax, word [bp+6]
  1843 | 00000CBE | 8904                      | 	mov	word [si], ax
  1844 |          |                           | 	; >>>>> Line:	200
  1845 |          |                           | 	; >>>>> task->prev = temp; 
  1846 | 00000CC0 | 8B7606                    | 	mov	si, word [bp+6]
  1847 | 00000CC3 | 83C60A                    | 	add	si, 10
  1848 | 00000CC6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1849 | 00000CC9 | 8904                      | 	mov	word [si], ax
  1850 |          |                           | 	; >>>>> Line:	201
  1851 |          |                           | 	; >>>>> temp->next = task; 
  1852 | 00000CCB | 8B76FE                    | 	mov	si, word [bp-2]
  1853 | 00000CCE | 83C608                    | 	add	si, 8
  1854 | 00000CD1 | 8B4606                    | 	mov	ax, word [bp+6]
  1855 | 00000CD4 | 8904                      | 	mov	word [si], ax
  1856 |          |                           | L_yakc_47:
  1857 |          |                           | 	; >>>>> Line:	203
  1858 |          |                           | 	; >>>>> return queue_head; 
  1859 | 00000CD6 | 8B4604                    | 	mov	ax, word [bp+4]
  1860 |          |                           | L_yakc_45:
  1861 | 00000CD9 | 89EC                      | 	mov	sp, bp
  1862 | 00000CDB | 5D                        | 	pop	bp
  1863 | 00000CDC | C3                        | 	ret
  1864 |          |                           | L_yakc_42:
  1865 | 00000CDD | 55                        | 	push	bp
  1866 | 00000CDE | 89E5                      | 	mov	bp, sp
  1867 | 00000CE0 | 51                        | 	push	cx
  1868 | 00000CE1 | E955FF                    | 	jmp	L_yakc_43
  1869 |          |                           | 	ALIGN	2
  1870 |          |                           | dequeue:
  1871 |          |                           | 	; >>>>> Line:	206
  1872 |          |                           | 	; >>>>> TCBptr dequeue(TCBptr queue_head){ 
  1873 | 00000CE4 | EB18                      | 	jmp	L_yakc_52
  1874 |          |                           | L_yakc_53:
  1875 |          |                           | 	; >>>>> Line:	208
  1876 |          |                           | 	; >>>>> queue_head = queue_head->next; 
  1877 | 00000CE6 | 8B4604                    | 	mov	ax, word [bp+4]
  1878 | 00000CE9 | 8946FE                    | 	mov	word [bp-2], ax
  1879 |          |                           | 	; >>>>> Line:	208
  1880 |          |                           | 	; >>>>> queue_head = queue_head->next; 
  1881 | 00000CEC | 8B7604                    | 	mov	si, word [bp+4]
  1882 | 00000CEF | 83C608                    | 	add	si, 8
  1883 | 00000CF2 | 8B04                      | 	mov	ax, word [si]
  1884 | 00000CF4 | 894604                    | 	mov	word [bp+4], ax
  1885 |          |                           | 	; >>>>> Line:	215
  1886 |          |                           | 	; >>>>> return next; 
  1887 | 00000CF7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1888 |          |                           | L_yakc_54:
  1889 | 00000CFA | 89EC                      | 	mov	sp, bp
  1890 | 00000CFC | 5D                        | 	pop	bp
  1891 | 00000CFD | C3                        | 	ret
  1892 |          |                           | L_yakc_52:
  1893 | 00000CFE | 55                        | 	push	bp
  1894 | 00000CFF | 89E5                      | 	mov	bp, sp
  1895 | 00000D01 | 51                        | 	push	cx
  1896 | 00000D02 | EBE2                      | 	jmp	L_yakc_53
  1897 |          |                           | 	ALIGN	2
  1898 |          |                           | suspendTask:
  1899 |          |                           | 	; >>>>> Line:	218
  1900 |          |                           | 	; >>>>> void suspendTask(TCBptr task){ 
  1901 | 00000D04 | E9F100                    | 	jmp	L_yakc_56
  1902 |          |                           | L_yakc_57:
  1903 |          |                           | 	; >>>>> Line:	220
  1904 |          |                           | 	; >>>>> task->state = 2; 
  1905 | 00000D07 | C746FE0000                | 	mov	word [bp-2], 0
  1906 |          |                           | 	; >>>>> Line:	220
  1907 |          |                           | 	; >>>>> task->state = 2; 
  1908 | 00000D0C | 8B7604                    | 	mov	si, word [bp+4]
  1909 | 00000D0F | 83C602                    | 	add	si, 2
  1910 | 00000D12 | C7040200                  | 	mov	word [si], 2
  1911 |          |                           | 	; >>>>> Line:	221
  1912 |          |                           | 	; >>>>> if(task->delay < YKSuspList->delay){ 
  1913 | 00000D16 | 8B7604                    | 	mov	si, word [bp+4]
  1914 | 00000D19 | 83C606                    | 	add	si, 6
  1915 | 00000D1C | 8B3E[020E]                | 	mov	di, word [YKSuspList]
  1916 | 00000D20 | 83C706                    | 	add	di, 6
  1917 | 00000D23 | 8B05                      | 	mov	ax, word [di]
  1918 | 00000D25 | 3B04                      | 	cmp	ax, word [si]
  1919 | 00000D27 | 7E1A                      | 	jle	L_yakc_58
  1920 |          |                           | 	; >>>>> Line:	222
  1921 |          |                           | 	; >>>>> YKSuspList->delay -= task->delay; 
  1922 | 00000D29 | 8B36[020E]                | 	mov	si, word [YKSuspList]
  1923 | 00000D2D | 83C606                    | 	add	si, 6
  1924 | 00000D30 | 8B7E04                    | 	mov	di, word [bp+4]
  1925 | 00000D33 | 83C706                    | 	add	di, 6
  1926 | 00000D36 | 8B05                      | 	mov	ax, word [di]
  1927 | 00000D38 | 2904                      | 	sub	word [si], ax
  1928 |          |                           | 	; >>>>> Line:	223
  1929 |          |                           | 	; >>>>> YKSuspList = task; 
  1930 | 00000D3A | 8B4604                    | 	mov	ax, word [bp+4]
  1931 | 00000D3D | A3[020E]                  | 	mov	word [YKSuspList], ax
  1932 | 00000D40 | E9B100                    | 	jmp	L_yakc_59
  1933 |          |                           | L_yakc_58:
  1934 |          |                           | 	; >>>>> Line:	227
  1935 |          |                           | 	; >>>>> temp = YKSuspList; 
  1936 | 00000D43 | A1[020E]                  | 	mov	ax, word [YKSuspList]
  1937 | 00000D46 | 8946FE                    | 	mov	word [bp-2], ax
  1938 |          |                           | 	; >>>>> Line:	228
  1939 |          |                           | 	; >>>>> while(temp->next != 0 && temp->delay < task->delay){ 
  1940 | 00000D49 | EB1B                      | 	jmp	L_yakc_61
  1941 |          |                           | L_yakc_60:
  1942 |          |                           | 	; >>>>> Line:	229
  1943 |          |                           | 	; >>>>> task->delay -= temp->d 
  1944 | 00000D4B | 8B7604                    | 	mov	si, word [bp+4]
  1945 | 00000D4E | 83C606                    | 	add	si, 6
  1946 | 00000D51 | 8B7EFE                    | 	mov	di, word [bp-2]
  1947 | 00000D54 | 83C706                    | 	add	di, 6
  1948 | 00000D57 | 8B05                      | 	mov	ax, word [di]
  1949 | 00000D59 | 2904                      | 	sub	word [si], ax
  1950 |          |                           | 	; >>>>> Line:	230
  1951 |          |                           | 	; >>>>> temp = temp->next; 
  1952 | 00000D5B | 8B76FE                    | 	mov	si, word [bp-2]
  1953 | 00000D5E | 83C608                    | 	add	si, 8
  1954 | 00000D61 | 8B04                      | 	mov	ax, word [si]
  1955 | 00000D63 | 8946FE                    | 	mov	word [bp-2], ax
  1956 |          |                           | L_yakc_61:
  1957 | 00000D66 | 8B76FE                    | 	mov	si, word [bp-2]
  1958 | 00000D69 | 83C608                    | 	add	si, 8
  1959 | 00000D6C | 8B04                      | 	mov	ax, word [si]
  1960 | 00000D6E | 85C0                      | 	test	ax, ax
  1961 | 00000D70 | 7412                      | 	je	L_yakc_63
  1962 | 00000D72 | 8B76FE                    | 	mov	si, word [bp-2]
  1963 | 00000D75 | 83C606                    | 	add	si, 6
  1964 | 00000D78 | 8B7E04                    | 	mov	di, word [bp+4]
  1965 | 00000D7B | 83C706                    | 	add	di, 6
  1966 | 00000D7E | 8B05                      | 	mov	ax, word [di]
  1967 | 00000D80 | 3B04                      | 	cmp	ax, word [si]
  1968 | 00000D82 | 7FC7                      | 	jg	L_yakc_60
  1969 |          |                           | L_yakc_63:
  1970 |          |                           | L_yakc_62:
  1971 |          |                           | 	; >>>>> Line:	232
  1972 |          |                           | 	; >>>>> if(temp->delay < task->delay) { 
  1973 | 00000D84 | 8B76FE                    | 	mov	si, word [bp-2]
  1974 | 00000D87 | 83C606                    | 	add	si, 6
  1975 | 00000D8A | 8B7E04                    | 	mov	di, word [bp+4]
  1976 | 00000D8D | 83C706                    | 	add	di, 6
  1977 | 00000D90 | 8B05                      | 	mov	ax, word [di]
  1978 | 00000D92 | 3B04                      | 	cmp	ax, word [si]
  1979 | 00000D94 | 7E28                      | 	jle	L_yakc_64
  1980 |          |                           | 	; >>>>> Line:	233
  1981 |          |                           | 	; >>>>> task->delay -= temp->delay; 
  1982 | 00000D96 | 8B7604                    | 	mov	si, word [bp+4]
  1983 | 00000D99 | 83C606                    | 	add	si, 6
  1984 | 00000D9C | 8B7EFE                    | 	mov	di, word [bp-2]
  1985 | 00000D9F | 83C706                    | 	add	di, 6
  1986 | 00000DA2 | 8B05                      | 	mov	ax, word [di]
  1987 | 00000DA4 | 2904                      | 	sub	word [si], ax
  1988 |          |                           | 	; >>>>> Line:	234
  1989 |          |                           | 	; >>>>> temp->next = task; 
  1990 | 00000DA6 | 8B76FE                    | 	mov	si, word [bp-2]
  1991 | 00000DA9 | 83C608                    | 	add	si, 8
  1992 | 00000DAC | 8B4604                    | 	mov	ax, word [bp+4]
  1993 | 00000DAF | 8904                      | 	mov	word [si], ax
  1994 |          |                           | 	; >>>>> Line:	235
  1995 |          |                           | 	; >>>>> task->prev = temp; 
  1996 | 00000DB1 | 8B7604                    | 	mov	si, word [bp+4]
  1997 | 00000DB4 | 83C60A                    | 	add	si, 10
  1998 | 00000DB7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1999 | 00000DBA | 8904                      | 	mov	word [si], ax
  2000 | 00000DBC | EB36                      | 	jmp	L_yakc_65
  2001 |          |                           | L_yakc_64:
  2002 |          |                           | 	; >>>>> Line:	237
  2003 |          |                           | 	; >>>>> task->prev = temp->prev; 
  2004 | 00000DBE | 8B76FE                    | 	mov	si, word [bp-2]
  2005 | 00000DC1 | 83C60A                    | 	add	si, 10
  2006 | 00000DC4 | 8B7E04                    | 	mov	di, word [bp+4]
  2007 | 00000DC7 | 83C70A                    | 	add	di, 10
  2008 | 00000DCA | 8B04                      | 	mov	ax, word [si]
  2009 | 00000DCC | 8905                      | 	mov	word [di], ax
  2010 |          |                           | 	; >>>>> Line:	238
  2011 |          |                           | 	; >>>>> task->next = temp; 
  2012 | 00000DCE | 8B7604                    | 	mov	si, word [bp+4]
  2013 | 00000DD1 | 83C608                    | 	add	si, 8
  2014 | 00000DD4 | 8B46FE                    | 	mov	ax, word [bp-2]
  2015 | 00000DD7 | 8904                      | 	mov	word [si], ax
  2016 |          |                           | 	; >>>>> Line:	239
  2017 |          |                           | 	; >>>>> temp->prev = task; 
  2018 | 00000DD9 | 8B76FE                    | 	mov	si, word [bp-2]
  2019 | 00000DDC | 83C60A                    | 	add	si, 10
  2020 | 00000DDF | 8B4604                    | 	mov	ax, word [bp+4]
  2021 | 00000DE2 | 8904                      | 	mov	word [si], ax
  2022 |          |                           | 	; >>>>> Line:	240
  2023 |          |                           | 	; >>>>> temp->delay -= task->delay; 
  2024 | 00000DE4 | 8B76FE                    | 	mov	si, word [bp-2]
  2025 | 00000DE7 | 83C606                    | 	add	si, 6
  2026 | 00000DEA | 8B7E04                    | 	mov	di, word [bp+4]
  2027 | 00000DED | 83C706                    | 	add	di, 6
  2028 | 00000DF0 | 8B05                      | 	mov	ax, word [di]
  2029 | 00000DF2 | 2904                      | 	sub	word [si], ax
  2030 |          |                           | L_yakc_65:
  2031 |          |                           | L_yakc_59:
  2032 | 00000DF4 | 89EC                      | 	mov	sp, bp
  2033 | 00000DF6 | 5D                        | 	pop	bp
  2034 | 00000DF7 | C3                        | 	ret
  2035 |          |                           | L_yakc_56:
  2036 | 00000DF8 | 55                        | 	push	bp
  2037 | 00000DF9 | 89E5                      | 	mov	bp, sp
  2038 | 00000DFB | 51                        | 	push	cx
  2039 | 00000DFC | E908FF                    | 	jmp	L_yakc_57
  2040 | 00000DFF | 90                        | 	ALIGN	2
  2041 |          |                           | YKRdyList:
  2042 | 00000E00 | 00<rept>                  | 	TIMES	2 db 0
  2043 |          |                           | YKSuspList:
  2044 | 00000E02 | 00<rept>                  | 	TIMES	2 db 0
  2045 |          |                           | YKAvailTCBList:
  2046 | 00000E04 | 00<rept>                  | 	TIMES	2 db 0
  2047 |          |                           | YKTCBArray:
  2048 | 00000E06 | 00<rept>                  | 	TIMES	48 db 0
  2049 |          |                           | YKCtxSwCount:
  2050 | 00000E36 | 00<rept>                  | 	TIMES	2 db 0
  2051 |          |                           | YKIdleCount:
  2052 | 00000E38 | 00<rept>                  | 	TIMES	2 db 0
  2053 |          |                           | YKTickNum:
  2054 | 00000E3A | 00<rept>                  | 	TIMES	2 db 0
  2055 |          |                           | activeTasks:
  2056 | 00000E3C | 00<rept>                  | 	TIMES	2 db 0
  2057 |          |                           | runningTask:
  2058 | 00000E3E | 00<rept>                  | 	TIMES	2 db 0
  2059 |          |                           | IStk:
  2060 | 00000E40 | 00<rept>                  | 	TIMES	510 db 0
  2061 |          |                           | ; Filename: yaks.s 
  2062 |          |                           | ; Dayton Minor
  2063 |          |                           | ; Jared Moore
  2064 |          |                           | ; Lab4a
  2065 |          |                           | ;
  2066 |          |                           | 
  2067 |          |                           | 
  2068 |          |                           | ; initStack initialized stack for new tasks 
  2069 |          |                           | ; param1 ip bp + 4
  2070 |          |                           | ; param2 sp bp + 6
  2071 |          |                           | ;
  2072 |          |                           | ; stack should look like this when we are done:
  2073 |          |                           | ; ax = 0
  2074 |          |                           | ; bx = 0
  2075 |          |                           | ; cx = 0
  2076 |          |                           | ; dx = 0
  2077 |          |                           | ; si = 0
  2078 |          |                           | ; di = 0
  2079 |          |                           | ; ds = 0
  2080 |          |                           | ; es = 0
  2081 |          |                           | ; ------
  2082 |          |                           | ; bp = param4 = bp + 8
  2083 |          |                           | ; ip = param2 = bp + 4
  2084 |          |                           | ; cs = param1 = bp + 2
  2085 |          |                           | ; flags = 0000 0010 0000 0000 = 0x0200  
  2086 |          |                           | ; flags are: {15,14,13,12,11(OF),10(DF),9(IF),8(TF),7(SF),6(ZF),5,4(AF),3,2(PF),1,0(CF)}
  2087 |          |                           | initStack:
  2088 | 0000103E | 55                        | 	push bp					;
  2089 | 0000103F | 89E5                      | 	mov bp,sp				;
  2090 | 00001041 | 53                        | 	push bx					;
  2091 | 00001042 | 51                        | 	push cx					;
  2092 | 00001043 | 52                        | 	push dx					;
  2093 | 00001044 | B80000                    | 	mov ax, 0x0				; 
  2094 | 00001047 | 8B5E06                    | 	mov bx, word[bp + 6]			; Store TCB sp in bx
  2095 | 0000104A | 8B4E04                    | 	mov cx, word[bp + 4]			; store ip in cx
  2096 | 0000104D | BA0002                    | 	mov dx, 0x0200				; Store flags in dx
  2097 | 00001050 | 89E5                      | 	mov bp, sp
  2098 | 00001052 | 89DC                      | 	mov sp, bx				; Change stack pointer to TCB stack
  2099 | 00001054 | 52                        | 	push dx					; Push flags
  2100 | 00001055 | 50                        | 	push ax					; Push cs
  2101 | 00001056 | 51                        | 	push cx					; Push ip
  2102 | 00001057 | 53                        | 	push bx					; Push bp
  2103 | 00001058 | 50                        | 	push ax					; Push 0 onto stack 8 times
  2104 | 00001059 | 50                        | 	push ax					; 2
  2105 | 0000105A | 50                        | 	push ax					; 3
  2106 | 0000105B | 50                        | 	push ax					; 4
  2107 | 0000105C | 50                        | 	push ax					; 5
  2108 | 0000105D | 50                        | 	push ax					; 6
  2109 | 0000105E | 50                        | 	push ax					; 7
  2110 | 0000105F | 50                        | 	push ax					; 8  Everything is good to this point
  2111 | 00001060 | 89E0                      | 	mov ax,sp				; Save new sp
  2112 | 00001062 | 89EC                      | 	mov sp,bp				; Restore stack pointer
  2113 | 00001064 | 5A                        | 	pop dx					; Restore bx - dx, bp
  2114 | 00001065 | 59                        | 	pop cx
  2115 | 00001066 | 5B                        | 	pop bx
  2116 | 00001067 | 5D                        | 	pop bp					;
  2117 | 00001068 | C3                        | 	ret						; Return
  2118 |          |                           | 
  2119 |          |                           | dispatchTask:
  2120 | 00001069 | 55                        | 	push bp			;
  2121 | 0000106A | 89E5                      | 	mov bp,sp		;
  2122 | 0000106C | 8B6604                    | 	mov sp, word[bp+4]	;
  2123 | 0000106F | 58                        | 	pop ax			;
  2124 | 00001070 | 5B                        | 	pop bx			;
  2125 | 00001071 | 59                        | 	pop cx			;
  2126 | 00001072 | 5A                        | 	pop dx			;
  2127 | 00001073 | 5E                        | 	pop si			;
  2128 | 00001074 | 5F                        | 	pop di			;
  2129 | 00001075 | 1F                        | 	pop ds			;
  2130 | 00001076 | 07                        | 	pop es			;
  2131 | 00001077 | 5D                        | 	pop bp			;
  2132 | 00001078 | CF                        | 	iret			; Return
  2133 |          |                           | 		 
  2134 |          |                           | 	 
  2135 |          |                           | 	
  2136 |          |                           | YKEnterMutex:
  2137 | 00001079 | 55                        | 	push bp
  2138 | 0000107A | 89E5                      | 	mov bp, sp
  2139 | 0000107C | FA                        | 	cli
  2140 | 0000107D | 89EC                      | 	mov sp, bp
  2141 | 0000107F | 5D                        | 	pop bp
  2142 | 00001080 | C3                        | 	ret
  2143 |          |                           | 
  2144 |          |                           | YKExitMutex
  2145 | 00001081 | 55                        | 	push bp
  2146 | 00001082 | 89E5                      | 	mov bp, sp
  2147 | 00001084 | FB                        | 	sti
  2148 | 00001085 | 89EC                      | 	mov sp, bp
  2149 | 00001087 | 5D                        | 	pop bp
  2150 | 00001088 | C3                        | 	ret
  2151 |          |                           | 	
  2152 |          |                           | 
  2153 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4b_app.i
  2154 |          |                           | 	CPU	8086
  2155 | 00001089 | 90                        | 	ALIGN	2
  2156 | 0000108A | EB28                      | 	jmp	main	; Jump to program start
  2157 |          |                           | L_lab4b_app_2:
  2158 | 0000108C | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  2159 | 00001095 | 6B65726E656C2E2E2E-       | ...
  2160 | 0000109E | 0A00                      | ...
  2161 |          |                           | L_lab4b_app_1:
  2162 | 000010A0 | 4372656174696E6720-       | 	DB	"Creating task A...",0xA,0
  2163 | 000010A9 | 7461736B20412E2E2E-       | ...
  2164 | 000010B2 | 0A00                      | ...
  2165 |          |                           | 	ALIGN	2
  2166 |          |                           | main:
  2167 |          |                           | 	; >>>>> Line:	23
  2168 |          |                           | 	; >>>>> { 
  2169 | 000010B4 | EB2F                      | 	jmp	L_lab4b_app_3
  2170 |          |                           | L_lab4b_app_4:
  2171 |          |                           | 	; >>>>> Line:	24
  2172 |          |                           | 	; >>>>> YKInitialize(); 
  2173 | 000010B6 | E809F9                    | 	call	YKInitialize
  2174 |          |                           | 	; >>>>> Line:	26
  2175 |          |                           | 	; >>>>> printString("Crea 
  2176 | 000010B9 | B8[A010]                  | 	mov	ax, L_lab4b_app_1
  2177 | 000010BC | 50                        | 	push	ax
  2178 | 000010BD | E868F3                    | 	call	printString
  2179 | 000010C0 | 83C402                    | 	add	sp, 2
  2180 |          |                           | 	; >>>>> Line:	27
  2181 |          |                           | 	; >>>>> YKNewTask(ATask, (void *)&AStk[256], 5); 
  2182 | 000010C3 | B005                      | 	mov	al, 5
  2183 | 000010C5 | 50                        | 	push	ax
  2184 | 000010C6 | B8[B814]                  | 	mov	ax, (AStk+512)
  2185 | 000010C9 | 50                        | 	push	ax
  2186 | 000010CA | B8[6E11]                  | 	mov	ax, ATask
  2187 | 000010CD | 50                        | 	push	ax
  2188 | 000010CE | E89BF9                    | 	call	YKNewTask
  2189 | 000010D1 | 83C406                    | 	add	sp, 6
  2190 |          |                           | 	; >>>>> Line:	29
  2191 |          |                           | 	; >>>>> printString("Starting kernel...\n"); 
  2192 | 000010D4 | B8[8C10]                  | 	mov	ax, L_lab4b_app_2
  2193 | 000010D7 | 50                        | 	push	ax
  2194 | 000010D8 | E84DF3                    | 	call	printString
  2195 | 000010DB | 83C402                    | 	add	sp, 2
  2196 |          |                           | 	; >>>>> Line:	30
  2197 |          |                           | 	; >>>>> YKRun(); 
  2198 | 000010DE | E80DFA                    | 	call	YKRun
  2199 | 000010E1 | 89EC                      | 	mov	sp, bp
  2200 | 000010E3 | 5D                        | 	pop	bp
  2201 | 000010E4 | C3                        | 	ret
  2202 |          |                           | L_lab4b_app_3:
  2203 | 000010E5 | 55                        | 	push	bp
  2204 | 000010E6 | 89E5                      | 	mov	bp, sp
  2205 | 000010E8 | EBCC                      | 	jmp	L_lab4b_app_4
  2206 |          |                           | L_lab4b_app_9:
  2207 | 000010EA | 5461736B2041206973-       | 	DB	"Task A is still running! Oh no! Task A was supposed to stop.",0xA,0
  2208 | 000010F3 | 207374696C6C207275-       | ...
  2209 | 000010FC | 6E6E696E6721204F68-       | ...
  2210 | 00001105 | 206E6F21205461736B-       | ...
  2211 | 0000110E | 204120776173207375-       | ...
  2212 | 00001117 | 70706F73656420746F-       | ...
  2213 | 00001120 | 2073746F702E0A00          | ...
  2214 |          |                           | L_lab4b_app_8:
  2215 | 00001128 | 4372656174696E6720-       | 	DB	"Creating task C...",0xA,0
  2216 | 00001131 | 7461736B20432E2E2E-       | ...
  2217 | 0000113A | 0A00                      | ...
  2218 |          |                           | L_lab4b_app_7:
  2219 | 0000113C | 4372656174696E6720-       | 	DB	"Creating low priority task B...",0xA,0
  2220 | 00001145 | 6C6F77207072696F72-       | ...
  2221 | 0000114E | 697479207461736B20-       | ...
  2222 | 00001157 | 422E2E2E0A00              | ...
  2223 |          |                           | L_lab4b_app_6:
  2224 | 0000115D | 5461736B2041207374-       | 	DB	"Task A started!",0xA,0
  2225 | 00001166 | 6172746564210A00          | ...
  2226 |          |                           | 	ALIGN	2
  2227 |          |                           | ATask:
  2228 |          |                           | 	; >>>>> Line:	34
  2229 |          |                           | 	; >>>>> { 
  2230 | 0000116E | EB57                      | 	jmp	L_lab4b_app_10
  2231 |          |                           | L_lab4b_app_11:
  2232 |          |                           | 	; >>>>> Line:	35
  2233 |          |                           | 	; >>>>> printString("Task A started!\n"); 
  2234 | 00001170 | B8[5D11]                  | 	mov	ax, L_lab4b_app_6
  2235 | 00001173 | 50                        | 	push	ax
  2236 | 00001174 | E8B1F2                    | 	call	printString
  2237 | 00001177 | 83C402                    | 	add	sp, 2
  2238 |          |                           | 	; >>>>> Line:	37
  2239 |          |                           | 	; >>>>> printString("Creating low priority task B...\n"); 
  2240 | 0000117A | B8[3C11]                  | 	mov	ax, L_lab4b_app_7
  2241 | 0000117D | 50                        | 	push	ax
  2242 | 0000117E | E8A7F2                    | 	call	printString
  2243 | 00001181 | 83C402                    | 	add	sp, 2
  2244 |          |                           | 	; >>>>> Line:	38
  2245 |          |                           | 	; >>>>> YKNewTask(BTask, (void *)&BStk[256], 7); 
  2246 | 00001184 | B007                      | 	mov	al, 7
  2247 | 00001186 | 50                        | 	push	ax
  2248 | 00001187 | B8[B816]                  | 	mov	ax, (BStk+512)
  2249 | 0000118A | 50                        | 	push	ax
  2250 | 0000118B | B8[0412]                  | 	mov	ax, BTask
  2251 | 0000118E | 50                        | 	push	ax
  2252 | 0000118F | E8DAF8                    | 	call	YKNewTask
  2253 | 00001192 | 83C406                    | 	add	sp, 6
  2254 |          |                           | 	; >>>>> Line:	40
  2255 |          |                           | 	; >>>>> printString("Creating task C...\n"); 
  2256 | 00001195 | B8[2811]                  | 	mov	ax, L_lab4b_app_8
  2257 | 00001198 | 50                        | 	push	ax
  2258 | 00001199 | E88CF2                    | 	call	printString
  2259 | 0000119C | 83C402                    | 	add	sp, 2
  2260 |          |                           | 	; >>>>> Line:	41
  2261 |          |                           | 	; >>>>> YKNewTask(CTask, (void *)&CStk[256], 2); 
  2262 | 0000119F | B002                      | 	mov	al, 2
  2263 | 000011A1 | 50                        | 	push	ax
  2264 | 000011A2 | B8[B818]                  | 	mov	ax, (CStk+512)
  2265 | 000011A5 | 50                        | 	push	ax
  2266 | 000011A6 | B8[6212]                  | 	mov	ax, CTask
  2267 | 000011A9 | 50                        | 	push	ax
  2268 | 000011AA | E8BFF8                    | 	call	YKNewTask
  2269 | 000011AD | 83C406                    | 	add	sp, 6
  2270 |          |                           | 	; >>>>> Line:	43
  2271 |          |                           | 	; >>>>> printString("Task A is still running! Oh no! Task A was supposed to stop.\n"); 
  2272 | 000011B0 | B8[EA10]                  | 	mov	ax, L_lab4b_app_9
  2273 | 000011B3 | 50                        | 	push	ax
  2274 | 000011B4 | E871F2                    | 	call	printString
  2275 | 000011B7 | 83C402                    | 	add	sp, 2
  2276 |          |                           | 	; >>>>> Line:	44
  2277 |          |                           | 	; >>>>> exit(0); 
  2278 | 000011BA | 30C0                      | 	xor	al, al
  2279 | 000011BC | 50                        | 	push	ax
  2280 | 000011BD | E81AF2                    | 	call	exit
  2281 | 000011C0 | 83C402                    | 	add	sp, 2
  2282 | 000011C3 | 89EC                      | 	mov	sp, bp
  2283 | 000011C5 | 5D                        | 	pop	bp
  2284 | 000011C6 | C3                        | 	ret
  2285 |          |                           | L_lab4b_app_10:
  2286 | 000011C7 | 55                        | 	push	bp
  2287 | 000011C8 | 89E5                      | 	mov	bp, sp
  2288 | 000011CA | EBA4                      | 	jmp	L_lab4b_app_11
  2289 |          |                           | L_lab4b_app_13:
  2290 | 000011CC | 5461736B2042207374-       | 	DB	"Task B started! Oh no! Task B wasn't supposed to run.",0xA,0
  2291 | 000011D5 | 617274656421204F68-       | ...
  2292 | 000011DE | 206E6F21205461736B-       | ...
  2293 | 000011E7 | 2042207761736E2774-       | ...
  2294 | 000011F0 | 20737570706F736564-       | ...
  2295 | 000011F9 | 20746F2072756E2E0A-       | ...
  2296 | 00001202 | 00                        | ...
  2297 | 00001203 | 90                        | 	ALIGN	2
  2298 |          |                           | BTask:
  2299 |          |                           | 	; >>>>> Line:	48
  2300 |          |                           | 	; >>>>> { 
  2301 | 00001204 | EB17                      | 	jmp	L_lab4b_app_14
  2302 |          |                           | L_lab4b_app_15:
  2303 |          |                           | 	; >>>>> Line:	49
  2304 |          |                           | 	; >>>>> printString("Task B st 
  2305 | 00001206 | B8[CC11]                  | 	mov	ax, L_lab4b_app_13
  2306 | 00001209 | 50                        | 	push	ax
  2307 | 0000120A | E81BF2                    | 	call	printString
  2308 | 0000120D | 83C402                    | 	add	sp, 2
  2309 |          |                           | 	; >>>>> Line:	50
  2310 |          |                           | 	; >>>>> exit(0); 
  2311 | 00001210 | 30C0                      | 	xor	al, al
  2312 | 00001212 | 50                        | 	push	ax
  2313 | 00001213 | E8C4F1                    | 	call	exit
  2314 | 00001216 | 83C402                    | 	add	sp, 2
  2315 | 00001219 | 89EC                      | 	mov	sp, bp
  2316 | 0000121B | 5D                        | 	pop	bp
  2317 | 0000121C | C3                        | 	ret
  2318 |          |                           | L_lab4b_app_14:
  2319 | 0000121D | 55                        | 	push	bp
  2320 | 0000121E | 89E5                      | 	mov	bp, sp
  2321 | 00001220 | EBE4                      | 	jmp	L_lab4b_app_15
  2322 |          |                           | L_lab4b_app_19:
  2323 | 00001222 | 457865637574696E67-       | 	DB	"Executing in task C.",0xA,0
  2324 | 0000122B | 20696E207461736B20-       | ...
  2325 | 00001234 | 432E0A00                  | ...
  2326 |          |                           | L_lab4b_app_18:
  2327 | 00001238 | 20636F6E7465787420-       | 	DB	" context switches!",0xA,0
  2328 | 00001241 | 737769746368657321-       | ...
  2329 | 0000124A | 0A00                      | ...
  2330 |          |                           | L_lab4b_app_17:
  2331 | 0000124C | 5461736B2043207374-       | 	DB	"Task C started after ",0
  2332 | 00001255 | 617274656420616674-       | ...
  2333 | 0000125E | 65722000                  | ...
  2334 |          |                           | 	ALIGN	2
  2335 |          |                           | CTask:
  2336 |          |                           | 	; >>>>> Line:	54
  2337 |          |                           | 	; >>>>> { 
  2338 | 00001262 | EB4C                      | 	jmp	L_lab4b_app_20
  2339 |          |                           | L_lab4b_app_21:
  2340 |          |                           | 	; >>>>> Line:	58
  2341 |          |                           | 	; >>>>> YKEnterMutex(); 
  2342 | 00001264 | E812FE                    | 	call	YKEnterMutex
  2343 |          |                           | 	; >>>>> Line:	59
  2344 |          |                           | 	; >>>>> numCtxSwitches = YKCtxSwCount; 
  2345 | 00001267 | A1[360E]                  | 	mov	ax, word [YKCtxSwCount]
  2346 | 0000126A | 8946FC                    | 	mov	word [bp-4], ax
  2347 |          |                           | 	; >>>>> Line:	60
  2348 |          |                           | 	; >>>>> YKExitMutex(); 
  2349 | 0000126D | E811FE                    | 	call	YKExitMutex
  2350 |          |                           | 	; >>>>> Line:	62
  2351 |          |                           | 	; >>>>> printString("Task C started after "); 
  2352 | 00001270 | B8[4C12]                  | 	mov	ax, L_lab4b_app_17
  2353 | 00001273 | 50                        | 	push	ax
  2354 | 00001274 | E8B1F1                    | 	call	printString
  2355 | 00001277 | 83C402                    | 	add	sp, 2
  2356 |          |                           | 	; >>>>> Line:	63
  2357 |          |                           | 	; >>>>> printUInt(numCtxSwitches); 
  2358 | 0000127A | FF76FC                    | 	push	word [bp-4]
  2359 | 0000127D | E84CF3                    | 	call	printUInt
  2360 | 00001280 | 83C402                    | 	add	sp, 2
  2361 |          |                           | 	; >>>>> Line:	64
  2362 |          |                           | 	; >>>>> printString(" context switches!\n"); 
  2363 | 00001283 | B8[3812]                  | 	mov	ax, L_lab4b_app_18
  2364 | 00001286 | 50                        | 	push	ax
  2365 | 00001287 | E89EF1                    | 	call	printString
  2366 | 0000128A | 83C402                    | 	add	sp, 2
  2367 |          |                           | 	; >>>>> Line:	66
  2368 |          |                           | 	; >>>>> while (1) 
  2369 | 0000128D | EB1B                      | 	jmp	L_lab4b_app_23
  2370 |          |                           | L_lab4b_app_22:
  2371 |          |                           | 	; >>>>> Line:	68
  2372 |          |                           | 	; >>>>> printString("Executing in task C.\n"); 
  2373 | 0000128F | B8[2212]                  | 	mov	ax, L_lab4b_app_19
  2374 | 00001292 | 50                        | 	push	ax
  2375 | 00001293 | E892F1                    | 	call	printString
  2376 | 00001296 | 83C402                    | 	add	sp, 2
  2377 |          |                           | 	; >>>>> Line:	69
  2378 |          |                           | 	; >>>>> for(count = 0; count < 5000; count++); 
  2379 | 00001299 | C746FE0000                | 	mov	word [bp-2], 0
  2380 | 0000129E | EB03                      | 	jmp	L_lab4b_app_26
  2381 |          |                           | L_lab4b_app_25:
  2382 |          |                           | L_lab4b_app_28:
  2383 | 000012A0 | FF46FE                    | 	inc	word [bp-2]
  2384 |          |                           | L_lab4b_app_26:
  2385 | 000012A3 | 817EFE8813                | 	cmp	word [bp-2], 5000
  2386 | 000012A8 | 7CF6                      | 	jl	L_lab4b_app_25
  2387 |          |                           | L_lab4b_app_27:
  2388 |          |                           | L_lab4b_app_23:
  2389 | 000012AA | EBE3                      | 	jmp	L_lab4b_app_22
  2390 |          |                           | L_lab4b_app_24:
  2391 | 000012AC | 89EC                      | 	mov	sp, bp
  2392 | 000012AE | 5D                        | 	pop	bp
  2393 | 000012AF | C3                        | 	ret
  2394 |          |                           | L_lab4b_app_20:
  2395 | 000012B0 | 55                        | 	push	bp
  2396 | 000012B1 | 89E5                      | 	mov	bp, sp
  2397 | 000012B3 | 83EC04                    | 	sub	sp, 4
  2398 | 000012B6 | EBAC                      | 	jmp	L_lab4b_app_21
  2399 |          |                           | 	ALIGN	2
  2400 |          |                           | AStk:
  2401 | 000012B8 | 00<rept>                  | 	TIMES	512 db 0
  2402 |          |                           | BStk:
  2403 | 000014B8 | 00<rept>                  | 	TIMES	512 db 0
  2404 |          |                           | CStk:
  2405 | 000016B8 | 00<rept>                  | 	TIMES	512 db 0
