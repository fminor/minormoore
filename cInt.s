; Generated by c86 (BYU-NASM) 5.1 (beta) from cInt.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
handleReset:
	; >>>>> Line:	3
	; >>>>> void handleReset(){ 
	jmp	L_cInt_1
L_cInt_2:
	; >>>>> Line:	4
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_cInt_1:
	push	bp
	mov	bp, sp
	jmp	L_cInt_2
	ALIGN	2
n:
	DW	0
L_cInt_4:
	DB	"Tick ",0
	ALIGN	2
handleTick:
	; >>>>> Line:	10
	; >>>>> void handleTick(){ 
	jmp	L_cInt_5
L_cInt_6:
	; >>>>> Line:	11
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	12
	; >>>>> printString("Tick "); 
	mov	ax, L_cInt_4
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	13
	; >>>>> printInt(n); 
	push	word [n]
	call	printInt
	add	sp, 2
	; >>>>> Line:	14
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	15
	; >>>>> n++; 
	inc	word [n]
	mov	sp, bp
	pop	bp
	ret
L_cInt_5:
	push	bp
	mov	bp, sp
	jmp	L_cInt_6
L_cInt_11:
	DB	"' IGNORED",0
L_cInt_10:
	DB	"KEYPRESS '",0
L_cInt_9:
	DB	"DELAY COMPLETE",0
L_cInt_8:
	DB	"DELAY KEY PRESSED",0
	ALIGN	2
handleKeyboard:
	; >>>>> Line:	19
	; >>>>> void handleKeyboard(){ 
	jmp	L_cInt_12
L_cInt_13:
	; >>>>> Line:	22
	; >>>>> if(KeyBuffer == 'd'){ 
	cmp	word [KeyBuffer], 100
	jne	L_cInt_14
	; >>>>> Line:	23
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	24
	; >>>>> printString("DELAY KEY PRESSED"); 
	mov	ax, L_cInt_8
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	25
	; >>>>> for (i = 0; i < 5000; i++){ 
	mov	word [bp-2], 0
	jmp	L_cInt_16
L_cInt_15:
L_cInt_18:
	; >>>>> Line:	27
	; >>>>> } 
	inc	word [bp-2]
L_cInt_16:
	cmp	word [bp-2], 5000
	jl	L_cInt_15
L_cInt_17:
	; >>>>> Line:	28
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	29
	; >>>>> printString("DELAY COMPLETE"); 
	mov	ax, L_cInt_9
	push	ax
	call	printString
	add	sp, 2
	jmp	L_cInt_19
L_cInt_14:
	; >>>>> Line:	32
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	33
	; >>>>> printString("KEYPRESS '"); 
	mov	ax, L_cInt_10
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	34
	; >>>>> printChar(KeyBuffer); 
	push	word [KeyBuffer]
	call	printChar
	add	sp, 2
	; >>>>> Line:	35
	; >>>>> printString("' IGNORED"); 
	mov	ax, L_cInt_11
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	36
	; >>>>> printNewLine(); 
	call	printNewLine
L_cInt_19:
	mov	sp, bp
	pop	bp
	ret
L_cInt_12:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_cInt_13
